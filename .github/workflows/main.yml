name: Semantic_Versioning_CICD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type: major, minor, or patch'
        required: true
        default: 'patch'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Current Version
        run: |
          # Fetching the current version stored in a repository variable
          current_version=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/prod_semantic_version | jq -r '.value')
          
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Semantic Version Bump
        id: version
        run: |
          version_type="${{ github.event.inputs.version }}"
          current_version="${{ env.current_version }}"
          
          IFS='.' read -r -a version_parts <<< "$current_version"
          major=${version_parts[0]:-0}
          minor=${version_parts[1]:-0}
          patch=${version_parts[2]:-0}
          
          if [ "$version_type" == "major" ]; then
            major=$((major+1))
            minor=0
            patch=0
          elif [ "$version_type" == "minor" ]; then
            minor=$((minor+1))
            patch=0
          elif [ "$version_type" == "patch" ]; then
            patch=$((patch+1))
          fi
          
          new_version="$major.$minor.$patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Update Version in GitHub Repository Variables
        run: |
          curl -X PATCH -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/variables/prod_semantic_version \
          -d '{"name": "prod_semantic_version", "value": "'"$new_version"'"}'






#name: Semantic_Versioning_CICD

#on:
#  workflow_dispatch:
#    inputs:
#      version:
#        description: 'Version bump type: major, minor, or patch'
#        required: true
#        default: 'patch'

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3

#      - name: Semantic Version
#        id: version
#        run: |
#          version_type="${{ github.event.inputs.version }}"
#          IFS='.' read -r -a version_parts <<< "$sematic_version"
#          major=${version_parts[0]:-0}
#          minor=${version_parts[1]:-0}
#          patch=${version_parts[2]:-0}
#          if [ "$version_type" == "major" ]; then
#            major=$((major+1))
#            minor=0
#            patch=0
#          elif [ "$version_type" == "minor" ]; then
#            minor=$((minor+1))
#            patch=0
#          elif [ "$version_type" == "patch" ]; then
#            patch=$((patch+1))
#          fi
#          new_sematic_version="$major.$minor.$patch"
#          echo "New version: $new_sematic_version"
#          echo "new_version=$new_sematic_version" >> $GITHUB_ENV







# name: Semantic Versioning

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   Install_version_deploy:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Install JQ
#         run: sudo apt-get install jq -y 

#       - name: Run version script
#         run: |
#           chmod +x ./version.sh
#           ./version.sh





